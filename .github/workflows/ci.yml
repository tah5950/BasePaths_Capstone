name: CI Pipeline

on:
  workflow_dispatch:
    inputs:
      branch:
        description: Branch to run against
        default: main
        required: true
  pull_request:
    branches: ["main"]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout Branch
      - uses: actions/checkout@v4
        if: inputs.branch != ''
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 24
          cache: gradle

      - name: Make gradlew executable
        run: chmod +x backend/gradlew

      - name: Backend Build
        run: |
          cd backend
          ./gradlew clean build --no-daemon

      - name: Backend Tests
        run: |
          cd backend
          ./gradlew test jacocoTestReport --no-daemon --rerun-tasks --info --console=plain
      
      # Upload reports as artifacts
      - name: Upload Backend Coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/build/reports/jacoco/test/html

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install Frontend
        run: |
          cd frontend
          npm ci

      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      - name: Run Frontend Tests
        run: |
          cd frontend
          npm test -- --coverage

      - name: Upload Frontend Coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage

      

      - name: Start Application
        run: |
          docker compose up -d --build
          docker ps -a

      - name: Wait for services
        run: sleep 15
      
      - name: Check services
        run: |
          echo "Checking backend:"
          curl -v http://localhost:8080 || true

          echo "Checking frontend:"
          curl -v http://localhost:5173 || true

      # Cypress tests will need seed data, which can be setup as part of future task
      - name: Run Cypress
        uses: cypress-io/github-action@v6
        with:
          working-directory: .
          config-file: cypress.config.js
          browser: chrome

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: logs
          path: |
            backend/backend.log
            frontend/frontend.log
            cypress/screenshots
            cypres/videos